#!/usr/bin/env python3

import argparse

from swin_latex import commands

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    subparsers = parser.add_subparsers()

    init = subparsers.add_parser('init')
    init.set_defaults(func=commands.initialize_project)
    init.add_argument('-o', '--overwrite', action='store_true',
                      help='Overwrites existing files and folders if a project already '
                           'exists')
    init.add_argument('-a', '--abstract', action='store_true',
                      help='Initializes the project with an abstract')
    init.add_argument('-k', '--acknowledgements', action='store_true',
                      help='Initializes the project with an acknowledgements section')
    init.add_argument('-g', '--gitignore', action='store_true',
                      help='Creates a LaTeX .gitignore file in the project root')
    init.add_argument('-b', '--bibtex', action='store_true',
                      help='Creates a blank bibtex bibliography file in the project root')
    init.add_argument('-t', '--type', type=str, choices=['paper', 'problem-set'], required=True,
                      help='The type of assignment being generated')

    new_section = subparsers.add_parser('new-section')
    new_section.set_defaults(func=commands.create_section)
    new_section.add_argument('name', default="", type=str, help='The section title')

    args = parser.parse_args()
    if len(vars(args)) > 0:
        args.func(args)
    else:
        parser.print_help()
